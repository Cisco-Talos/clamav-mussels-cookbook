# Copyright (C) 2020 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: libnghttp2
version: "1.52.0"
url: https://github.com/nghttp2/nghttp2/archive/refs/tags/v1.52.0.zip
archive_name_change:
  - v
  - nghttp2-
mussels_version: "0.3"
type: recipe
platforms:
  Darwin:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -G Xcode -T buildsystem=1 \
            -D CMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
            -D BUILD_SHARED_LIBS=ON \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.1.1.dylib" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.1.1.dylib" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.dylib" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          cmake --build . --config RelWithDebInfo
        install: |
          cd build
          cmake --build . --config RelWithDebInfo --target install
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libnghttp2.dylib"
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - xcode
        - clang
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -G Xcode -T buildsystem=1 \
            -D CMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.a" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.a" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.a" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}" \
            -D ENABLE_LIB_ONLY=ON \
            -D ENABLE_STATIC_LIB=ON \
            -D ENABLE_SHARED_LIB=OFF
        make: |
          cd build
          cmake --build . --config RelWithDebInfo
        install: |
          cd build
          cmake --build . --config RelWithDebInfo --target install
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - xcode
        - clang
  Linux:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D BUILD_SHARED_LIBS=ON \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.so.1.1" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.so.1.1" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.so" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          make install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libnghttp2.so"
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - make
        - gcc
        - patchelf
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.a" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.a" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.a" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}" \
            -D ENABLE_LIB_ONLY=ON \
            -D ENABLE_STATIC_LIB=ON \
            -D ENABLE_SHARED_LIB=OFF \
            -D CMAKE_POSITION_INDEPENDENT_CODE=ON \
            -D CMAKE_INSTALL_LIBDIR=lib
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          make install
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - make
        - gcc
  Freebsd:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D BUILD_SHARED_LIBS=ON \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.so.1.1" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.so.1.1" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.so" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          gmake install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libnghttp2.so"
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - gmake
        - clang
        - patchelf
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D OPENSSL_LIBRARIES="{libs}" \
            -D OPENSSL_CRYPTO_LIBRARY="{libs}/libcrypto.a" \
            -D OPENSSL_SSL_LIBRARY="{libs}/libssl.a" \
            -D LIBXML2_INCLUDE_DIRS="{includes}" \
            -D LIBXML2_LIBRARY="{libs}/libxml2.a" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/libz.a" \
            -D CMAKE_INSTALL_PREFIX="{install}" \
            -D ENABLE_LIB_ONLY=ON \
            -D ENABLE_STATIC_LIB=ON \
            -D ENABLE_SHARED_LIB=OFF \
            -D CMAKE_POSITION_INDEPENDENT_CODE=ON \
            -D CMAKE_INSTALL_LIBDIR=lib
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          gmake install
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
        - libxml2>=2.9.9
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - gmake
        - clang
  Windows:
    x64:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A x64 \
            -D CMAKE_INSTALL_PREFIX="{install}" \
            -D BUILD_SHARED_LIBS=ON \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIRS="{includes}" \
            -D LIB_EAY_RELEASE="{libs}/libcrypto.lib" \
            -D SSL_EAY_RELEASE="{libs}/libssl.lib" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/zlibstatic.lib"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/nghttp2.dll {install}/lib/
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - visualstudio>=2017
    x86:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A Win32 \
            -D CMAKE_INSTALL_PREFIX="{install}" \
            -D BUILD_SHARED_LIBS=ON \
            -D OPENSSL_ROOT_DIR="{install}" \
            -D OPENSSL_INCLUDE_DIR="{includes}" \
            -D LIB_EAY_RELEASE="{libs}/libcrypto.lib" \
            -D SSL_EAY_RELEASE="{libs}/libssl.lib" \
            -D ZLIB_ROOT="{includes}" \
            -D ZLIB_LIBRARY="{libs}/zlibstatic.lib"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/nghttp2.dll {install}/lib/
      dependencies:
        - libopenssl>=1.0.1
        - libz>=1.2.3
      install_paths:
        license/libnghttp2:
          - COPYING
      required_tools:
        - cmake
        - visualstudio>=2017
