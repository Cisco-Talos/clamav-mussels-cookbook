# Copyright (C) 2020 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: Rewrite this to use the new CMake build system, when unit test support is complete.
name: clamav
version: "0.104.0"
url: https://github.com/Cisco-Talos/clamav/archive/rel/0.105.zip
archive_name_change:
  - "0.105"
  - clamav-rel-0.105
mussels_version: "0.2"
type: recipe
platforms:
  Darwin:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_INSTALL_PREFIX="{install}"                       \
            -D CMAKE_MODULE_PATH={install}/lib/cmake                  \
            -D CMAKE_BUILD_TYPE=Release                               \
            -D ENABLE_EXAMPLES=OFF                                    \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"           \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"              \
            -D ENABLE_JSON_SHARED=OFF                                 \
            -D BZIP2_INCLUDE_DIR="{install}/include"                  \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2.a"         \
            -D CURL_INCLUDE_DIR="{install}/include"                   \
            -D CURL_LIBRARY="{install}/lib/libcurl.dylib"             \
            -D OPENSSL_ROOT_DIR="{install}"                           \
            -D OPENSSL_INCLUDE_DIR="{install}/include"                \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.dylib" \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.dylib"       \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"        \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.dylib"          \
            -D PCRE2_INCLUDE_DIR="{install}/include"                  \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.dylib"         \
            -D CURSES_INCLUDE_DIR="{install}/include"                 \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"            \
            -D ZLIB_INCLUDE_DIR="{install}/include"                   \
            -D ZLIB_LIBRARY="{install}/lib/libz.dylib"                \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"               \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.dylib"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libclamunrar_iface.so"
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libfreshclam.dylib"
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libclamav.dylib"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clambc"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamconf"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamdscan"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamscan"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamsubmit"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/freshclam"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/sigtool"
          install_name_tool -add_rpath @executable_path/../lib "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2<1.1.0
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - make
        - clang
        - pkgconfig
        - cmake
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_FIND_PACKAGE_PREFER_CONFIG=TRUE                  \
            -D CMAKE_PREFIX_PATH={install}                            \
            -D CMAKE_INSTALL_PREFIX="{install}"                       \
            -D CMAKE_MODULE_PATH={install}/lib/cmake                  \
            -D CMAKE_BUILD_TYPE=Release                               \
            -D ENABLE_EXAMPLES=OFF                                    \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"           \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"              \
            -D ENABLE_JSON_SHARED=OFF                                 \
            -D BZIP2_INCLUDE_DIR="{install}/include"                  \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2_static.a"  \
            -D OPENSSL_ROOT_DIR="{install}"                           \
            -D OPENSSL_INCLUDE_DIR="{install}/include"                \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.a"     \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.a"           \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"        \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.a"              \
            -D PCRE2_INCLUDE_DIR="{install}/include"                  \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.a"             \
            -D CURSES_INCLUDE_DIR="{install}/include"                 \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"            \
            -D ZLIB_INCLUDE_DIR="{install}/include"                   \
            -D ZLIB_LIBRARY="{install}/lib/libz.a"                    \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"               \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.a"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libclamunrar_iface.so"
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libfreshclam.dylib"
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libclamav.dylib"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clambc"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamconf"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamdscan"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamscan"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/clamsubmit"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/freshclam"
          install_name_tool -add_rpath @executable_path/../lib "{install}/bin/sigtool"
          install_name_tool -add_rpath @executable_path/../lib "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - make
        - clang
        - pkgconfig
        - cmake
  Linux:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_INSTALL_PREFIX="{install}"                    \
            -D CMAKE_MODULE_PATH={install}/lib/cmake               \
            -D CMAKE_BUILD_TYPE=Release                            \
            -D ENABLE_EXAMPLES=OFF                                 \
            -D ENABLE_SYSTEMD=OFF                                  \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"        \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"           \
            -D ENABLE_JSON_SHARED=OFF                              \
            -D BZIP2_INCLUDE_DIR="{install}/include"               \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2.a"      \
            -D CURL_INCLUDE_DIR="{install}/include"                \
            -D CURL_LIBRARY="{install}/lib/libcurl.so"             \
            -D OPENSSL_ROOT_DIR="{install}"                        \
            -D OPENSSL_INCLUDE_DIR="{install}/include"             \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.so" \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.so"       \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"     \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.so"          \
            -D PCRE2_INCLUDE_DIR="{install}/include"               \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.so"         \
            -D CURSES_INCLUDE_DIR="{install}/include"              \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"         \
            -D ZLIB_INCLUDE_DIR="{install}/include"                \
            -D ZLIB_LIBRARY="{install}/lib/libz.so"                \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"            \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.so"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamunrar_iface.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libfreshclam.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamav.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clambc"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamconf"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamdscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamsubmit"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/freshclam"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/sigtool"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2<1.1.0
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - make
        - gcc
        - patchelf
        - pkgconfig
        - cmake
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_FIND_PACKAGE_PREFER_CONFIG=TRUE                  \
            -D CMAKE_PREFIX_PATH={install}                            \
            -D CMAKE_INSTALL_PREFIX="{install}"                       \
            -D CMAKE_MODULE_PATH={install}/lib/cmake                  \
            -D CMAKE_BUILD_TYPE=Release                               \
            -D ENABLE_EXAMPLES=OFF                                    \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"           \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"              \
            -D ENABLE_JSON_SHARED=OFF                                 \
            -D BZIP2_INCLUDE_DIR="{install}/include"                  \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2_static.a"  \
            -D OPENSSL_ROOT_DIR="{install}"                           \
            -D OPENSSL_INCLUDE_DIR="{install}/include"                \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.a"     \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.a"           \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"        \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.a"              \
            -D PCRE2_INCLUDE_DIR="{install}/include"                  \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.a"             \
            -D CURSES_INCLUDE_DIR="{install}/include"                 \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"            \
            -D ZLIB_INCLUDE_DIR="{install}/include"                   \
            -D ZLIB_LIBRARY="{install}/lib/libz.a"                    \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"               \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.a"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamunrar_iface.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libfreshclam.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamav.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clambc"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamconf"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamdscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamsubmit"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/freshclam"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/sigtool"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - make
        - gcc
        - patchelf
        - pkgconfig
        - cmake
  Freebsd:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_INSTALL_PREFIX="{install}"                    \
            -D CMAKE_MODULE_PATH={install}/lib/cmake               \
            -D CMAKE_BUILD_TYPE=Release                            \
            -D ENABLE_EXAMPLES=OFF                                 \
            -D ENABLE_SYSTEMD=OFF                                  \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"        \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"           \
            -D ENABLE_JSON_SHARED=OFF                              \
            -D BZIP2_INCLUDE_DIR="{install}/include"               \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2.a"      \
            -D CURL_INCLUDE_DIR="{install}/include"                \
            -D CURL_LIBRARY="{install}/lib/libcurl.so"             \
            -D OPENSSL_ROOT_DIR="{install}"                        \
            -D OPENSSL_INCLUDE_DIR="{install}/include"             \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.so" \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.so"       \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"     \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.so"          \
            -D PCRE2_INCLUDE_DIR="{install}/include"               \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.so"         \
            -D CURSES_INCLUDE_DIR="{install}/include"              \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"         \
            -D ZLIB_INCLUDE_DIR="{install}/include"                \
            -D ZLIB_LIBRARY="{install}/lib/libz.so"                \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"            \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.so"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamunrar_iface.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libfreshclam.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamav.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clambc"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamconf"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamdscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamsubmit"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/freshclam"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/sigtool"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2<1.1.0
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - gmake
        - clang
        - patchelf
        - pkgconfig
        - cmake
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_FIND_PACKAGE_PREFER_CONFIG=TRUE                  \
            -D CMAKE_PREFIX_PATH={install}                            \
            -D CMAKE_INSTALL_PREFIX="{install}"                       \
            -D CMAKE_MODULE_PATH={install}/lib/cmake                  \
            -D CMAKE_BUILD_TYPE=Release                               \
            -D ENABLE_EXAMPLES=OFF                                    \
            -D JSONC_INCLUDE_DIR="{install}/include/json-c"           \
            -D JSONC_LIBRARY="{install}/lib/libjson-c.a"              \
            -D ENABLE_JSON_SHARED=OFF                                 \
            -D BZIP2_INCLUDE_DIR="{install}/include"                  \
            -D BZIP2_LIBRARY_RELEASE="{install}/lib/libbz2_static.a"  \
            -D OPENSSL_ROOT_DIR="{install}"                           \
            -D OPENSSL_INCLUDE_DIR="{install}/include"                \
            -D OPENSSL_CRYPTO_LIBRARY="{install}/lib/libcrypto.a"     \
            -D OPENSSL_SSL_LIBRARY="{install}/lib/libssl.a"           \
            -D LIBXML2_INCLUDE_DIR="{install}/include/libxml2"        \
            -D LIBXML2_LIBRARY="{install}/lib/libxml2.a"              \
            -D PCRE2_INCLUDE_DIR="{install}/include"                  \
            -D PCRE2_LIBRARY="{install}/lib/libpcre2-8.a"             \
            -D CURSES_INCLUDE_DIR="{install}/include"                 \
            -D CURSES_LIBRARY="{install}/lib/libncurses.a"            \
            -D ZLIB_INCLUDE_DIR="{install}/include"                   \
            -D ZLIB_LIBRARY="{install}/lib/libz.a"                    \
            -D LIBCHECK_INCLUDE_DIR="{install}/include"               \
            -D LIBCHECK_LIBRARY="{install}/lib/libcheck.a"
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamunrar_iface.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libfreshclam.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libclamav.so"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clambc"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamconf"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamdscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamscan"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/clamsubmit"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/freshclam"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/bin/sigtool"
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/sbin/clamd"
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2
        - libcheck
        - ncurses
      install_paths:
        license/clamav:
          - COPYING*
      required_tools:
        - gmake
        - clang
        - patchelf
        - pkgconfig
        - cmake
  Windows:
    x64:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A x64 \
            -D CMAKE_INSTALL_PREFIX="{install}"                     \
            -D ENABLE_EXAMPLES=OFF                                  \
            -D JSONC_INCLUDE_DIR="{install}\include\json-c"         \
            -D JSONC_LIBRARY="{install}\lib\json-c.lib"             \
            -D ENABLE_JSON_SHARED=OFF                               \
            -D BZIP2_INCLUDE_DIR="{install}\include"                \
            -D BZIP2_LIBRARY_RELEASE="{install}\lib\libbz2.lib"     \
            -D CURL_INCLUDE_DIR="{install}\include"                 \
            -D CURL_LIBRARY="{install}\lib\libcurl_imp.lib"         \
            -D OPENSSL_ROOT_DIR="{install}"                         \
            -D OPENSSL_INCLUDE_DIR="{install}\include"              \
            -D OPENSSL_CRYPTO_LIBRARY="{install}\lib\libcrypto.lib" \
            -D OPENSSL_SSL_LIBRARY="{install}\lib\libssl.lib"       \
            -D LIBXML2_INCLUDE_DIR="{install}\include\libxml2"      \
            -D LIBXML2_LIBRARY="{install}\lib\libxml2.lib"          \
            -D PCRE2_INCLUDE_DIR="{install}\include"                \
            -D PCRE2_LIBRARY="{install}\lib\pcre2-8.lib"            \
            -D CURSES_INCLUDE_DIR="{install}\include"               \
            -D CURSES_LIBRARY="{install}\lib\pdcurses.lib"          \
            -D PThreadW32_INCLUDE_DIR="{install}\include"           \
            -D PThreadW32_LIBRARY="{install}\lib\pthreadVC3.lib"    \
            -D ZLIB_INCLUDE_DIR="{install}\include"                 \
            -D ZLIB_LIBRARY="{install}\lib\zlibstatic.lib"          \
            -D LIBCHECK_INCLUDE_DIR="{install}\include"             \
            -D LIBCHECK_LIBRARY="{install}\lib\checkDynamic.lib"
        make: |
          cd build
          cmake --build . --config Release
        install: |
          cd build
          cmake --build . --config Release --target install
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - pthreads_win32
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2<1.1.0
        - pdcurses
        - libcheck
      required_tools:
        - cmake
        - visualstudio>=2017
    x86:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A Win32 \
            -D CMAKE_INSTALL_PREFIX="{install}"                     \
            -D ENABLE_EXAMPLES=OFF                                  \
            -D JSONC_INCLUDE_DIR="{install}\include\json-c"         \
            -D JSONC_LIBRARY="{install}\lib\json-c.lib"             \
            -D ENABLE_JSON_SHARED=OFF                               \
            -D BZIP2_INCLUDE_DIR="{install}\include"                \
            -D BZIP2_LIBRARY_RELEASE="{install}\lib\libbz2.lib"     \
            -D CURL_INCLUDE_DIR="{install}\include"                 \
            -D CURL_LIBRARY="{install}\lib\libcurl_imp.lib"         \
            -D OPENSSL_ROOT_DIR="{install}"                         \
            -D OPENSSL_INCLUDE_DIR="{install}\include"              \
            -D OPENSSL_CRYPTO_LIBRARY="{install}\lib\libcrypto.lib" \
            -D OPENSSL_SSL_LIBRARY="{install}\lib\libssl.lib"       \
            -D LIBXML2_INCLUDE_DIR="{install}\include\libxml2"      \
            -D LIBXML2_LIBRARY="{install}\lib\libxml2.lib"          \
            -D PCRE2_INCLUDE_DIR="{install}\include"                \
            -D PCRE2_LIBRARY="{install}\lib\pcre2-8.lib"            \
            -D CURSES_INCLUDE_DIR="{install}\include"               \
            -D CURSES_LIBRARY="{install}\lib\pdcurses.lib"          \
            -D PThreadW32_INCLUDE_DIR="{install}\include"           \
            -D PThreadW32_LIBRARY="{install}\lib\pthreadVC2.lib"    \
            -D ZLIB_INCLUDE_DIR="{install}\include"                 \
            -D ZLIB_LIBRARY="{install}\lib\zlibstatic.lib"          \
            -D LIBCHECK_INCLUDE_DIR="{install}\include"             \
            -D LIBCHECK_LIBRARY="{install}\lib\checkDynamic.lib"
        make: |
          cd build
          cmake --build . --config Release
        install: |
          cd build
          cmake --build . --config Release --target install
      dependencies:
        - libz
        - libcurl
        - libjson_c
        - pthreads_win32
        - libxml2
        - libopenssl
        - libpcre2
        - libbz2<1.1.0
        - pdcurses
        - libcheck
      required_tools:
        - cmake
        - visualstudio>=2017
