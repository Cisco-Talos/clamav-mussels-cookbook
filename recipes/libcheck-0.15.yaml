# Copyright (C) 2020 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: libcheck
version: "0.15.2"
url: https://github.com/libcheck/check/archive/0.15.2.tar.gz
archive_name_change:
  - 0.15.2
  - check-0.15.2
mussels_version: "0.3"
type: recipe
platforms:
  Darwin:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -G Xcode \
            -D CMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
            -D CMAKE_INSTALL_PREFIX={install}
        make: |
          cd build
          cmake --build . --config RelWithDebInfo
        install: |
          cd build
          cmake --build . --config RelWithDebInfo --target install
          install_name_tool -add_rpath @executable_path/../lib "{install}/lib/libcheck.dylib"
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - xcode
        - clang
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -G Xcode \
            -D CMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
            -D CMAKE_INSTALL_PREFIX={install}
        make: |
          cd build
          cmake --build . --config RelWithDebInfo
        install: |
          cd build
          cmake --build . --config RelWithDebInfo --target install
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - xcode
        - clang
  Linux:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_INSTALL_PREFIX={install}
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libcheck.so"
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - gcc
        - patchelf
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_INSTALL_PREFIX={install} \
            -D CMAKE_INSTALL_LIBDIR=lib
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - gcc
  Freebsd:
    host:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_INSTALL_PREFIX={install}
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
          patchelf --set-rpath '$ORIGIN/../lib' "{install}/lib/libcheck.so"
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - clang
        - gmake
        - patchelf
    host-static:
      build_script:
        configure: |
          mkdir build
          cd build
          cmake .. \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_INSTALL_PREFIX={install} \
            -D CMAKE_INSTALL_LIBDIR=lib
        make: |
          cd build
          cmake --build .
        install: |
          cd build
          cmake --build . --target install
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - clang
        - gmake
  Windows:
    x64:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A x64 \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/checkDynamic.dll {install}/lib/
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - visualstudio>=2017
    x64-static:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A x64 \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/checkDynamic.dll {install}/lib/
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - visualstudio>=2017
    x86:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A Win32 \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/checkDynamic.dll {install}/lib/
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - visualstudio>=2017
    x86-static:
      build_script:
        configure: |
          mkdir build
          cd build
          CALL cmake.exe .. -G "{visualstudio.cmake_generator}" -A Win32 \
            -D CMAKE_INSTALL_PREFIX="{install}"
        make: |
          cd build
          CALL cmake.exe --build . --config Release
        install: |
          cd build
          CALL cmake.exe --build . --config Release --target install
          mv {install}/bin/checkDynamic.dll {install}/lib/
      install_paths:
        license/libcheck:
          - COPYING.LESSER
      required_tools:
        - cmake
        - visualstudio>=2017
